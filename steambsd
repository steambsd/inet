#!/bin/sh
############################################
###          SIMPLE INSTALLATION         ###
###                 STEAM                ###   
###              ON FREEBSD              ###
############   set permission   ############
chmod +x autoconfig
chmod +x steam-linux
chmod +x steam-wine
chmod +x utils

############################################
### Variables                            ###
############################################
# user with wheel group
AZER=$1
# choose driver for your PC, it may be: 
# nvidia, amdgpu, radeon, intel or vesa
DRIV=$2

############################################
### Function                             ###
############################################
# package type installation (local or inet)
pli()
{
if [ -d All ]; then
pkg add All/$1-*
else
pkg ins -y $1
fi
}

############################################
### Bugs                                 ###
############################################
# drm-kmod not work on FreeBSD 12.2
if [ $DRIV != 'nvidia' ]; then DRIV='vesa'; fi

############################################
### Check system                         ###
############################################
# blank arguments
case "$#" in
0)
 # default: user - admin, driver - nvidia
 AZER='admin'
 pw useradd $AZER -m -b /usr/home -G wheel; echo 0000 | pw usermod $AZER -h0
 DRIV='nvidia'
 ;;
1)
 echo "Error. Please, type two arguments."
 echo "Usage: $0 [your_user] [your_driver]"
 exit 0
 ;;
2)
 # add if not exist
 pw usershow $AZER || chk=1
 if [ $chk = 1 ]; then
  pw useradd $AZER -m
  echo '0000' | pw usermod $AZER -h0
 fi
 # try to wheel
 pw usermod $AZER -G wheel
 ;;
*)
 echo "Error. Please, type two arguments."
 echo "Usage: $0 [your_user] [video_driver]"
 exit 0
 ;;
esac

############################################
### Tuning                               ###
############################################
# /boot/loader.conf
sysrc -f /boot/loader.conf autoboot_delay=2
sysrc -f /boot/loader.conf beastie_disable=YES
# /etc/sysctl.conf
echo 'kern.coredump=0' >> /etc/sysctl.conf
sysctl kern.coredump=0
# /etc/rc.conf
sysrc clear_tmp_enable=YES
sysrc sendmail_enable=NO
sysrc moused_enable=NO
sysrc sshd_enable=NO

############################################
### Update                               ###
############################################
# system
env PAGER=cat freebsd-update fetch
freebsd-update install
# pkg
env ASSUME_ALWAYS_YES=YES pkg bootstrap
env ASSUME_ALWAYS_YES=YES pkg update -f

############################################
### Prepare                              ###
############################################
# for user privilegies
pli sudo
pli bash
echo '%wheel ALL=(ALL) NOPASSWD: ALL' >> /usr/local/etc/sudoers
pw usermod $AZER -s /usr/local/bin/bash
# user for steam
pw useradd steam -m
pw usermod steam -s /usr/local/bin/bash
# user for steam development
pw useradd steamdev -m
pw usermod steamdev -s /usr/local/bin/bash
# linux
sysrc linux_enable=YES
sysrc linux64_enable=YES
kldload linux
kldload linux64

############################################
### Custom                               ###
############################################
# motd
echo "==> Build date used for motd and product file"
BUILDDATE=$(date +%Y%m%d)
RELEASE="12.2-RELEASE"
DOC_URL="http://steambsd.epizy.com/"

echo "==> Creating /etc/motd"
mv /etc/motd /etc/motd-backup
cat << MOTD > /etc/motd

 -=L-Progres=-
     LTD

                         Instance (FreeBSD $RELEASE $BUILDDATE)
                          $DOC_URL

MOTD



echo "==> Creating /etc/product file"
cat << PRODUCT > /etc/product
Name: SteamBSD Instance
Image: SteamBSD $RELEASE $BUILDDATE
Documentation: $DOC_URL
Description: SteamBSD $RELEASE 64-bit image with just essential packages \
installed. Ideal for users who are comfortable with setting up their \
own environment and tools.
PRODUCT
# change name of OS
echo '==> Change name of os'
cat << EOF >> /root/.bashrc
alias uname="uname -a | sed -e 's/FreeBSD/SteamBSD/g'"
EOF
cat << EOF >> /root/.cshrc
alias uname	uname -a | sed -e 's/FreeBSD/SteamBSD/g'
EOF
cat << EOF >> /home/${AZER}/.bashrc
alias uname="uname -a | sed -e 's/FreeBSD/SteamBSD/g'"
EOF
cat << EOF >> /home/${AZER}/.cshrc
alias uname     uname -a | sed -e 's/FreeBSD/SteamBSD/g'
EOF
cat << EOF >> /home/steam/.bashrc 
alias uname="uname -a | sed -e 's/FreeBSD/SteamBSD/g'"
EOF
cat << EOF >> /home/steam/.cshrc 
alias uname     uname -a | sed -e 's/FreeBSD/SteamBSD/g'
EOF
cat << EOF >> /home/steamdev/.bashrc 
alias uname="uname -a | sed -e 's/FreeBSD/SteamBSD/g'"
EOF
cat << EOF >> /home/steamdev/.cshrc 
alias uname     uname -a | sed -e 's/FreeBSD/SteamBSD/g'
EOF

############################################
### Packages                             ###
############################################
# packages for WM
pli xorg
pli slim
pli lxde-meta
# packages for wine
pli i386-wine
pli winetricks
pli wine-mono
pli wine-gecko
# packages for linux
pli linux-steam-utils
# packages for comfort
pli leafpad
pli chromium
pli vlc
pli simplescreenrecorder
# video driver
pli nvidia-driver
pli nvidia-settings
pli linux-nvidia-libs
#pli drm-kmod
#pli xf86-video-amdgpu
#pli xf86-video-intel

############################################
### Driver                               ###
############################################
case "$DRIV" in
 nvidia)
sysrc kld_list+="nvidia-modeset"
kldload nvidia-modeset
cat << EOF > /usr/local/etc/X11/xorg.conf.d/xorg.conf 
Section "Device"
        Identifier "NVIDIA Card"
        VendorName "NVIDIA Corporation"
        Driver "nvidia"
EndSection
EOF
 ;;
 amdgpu)
sysrc kld_list+="/boot/modules/amdgpu.ko"
#cat << EOF > /usr/local/etc/X11/xorg.conf.d/xorg.conf 
#Section "Device"
#        Identifier "Card0"
#        Driver     "amdgpu"
#EndSection
#EOF
 ;;
  radeon)
sysrc kld_list+="/boot/modules/radeonkms.ko"
#cat << EOF > /usr/local/etc/X11/xorg.conf.d/xorg.conf 
#Section "Device"
#        Identifier "Card0"
#        Driver     "radeonkms"
#EndSection
#EOF
 ;;
 intel)
sysrc kld_list+="/boot/modules/i915kms.ko"
#cat << EOF > /usr/local/etc/X11/xorg.conf.d/xorg.conf 
#Section "Device"
#        Identifier "Card0"
#        Driver     "intel"
#EndSection
#EOF
 ;;
 *)
#cat << EOF > /usr/local/etc/X11/xorg.conf.d/xorg.conf 
# Section "Device"
#    Identifier    "Card0"
#    Driver        "vesa"
# EndSection 
#EOF
 ;;
esac

############################################
### Files                                ###
############################################
# create documents folder
mkdir /home/$AZER/Documents
# copy steambsd scrips
cp autoconfig /home/$AZER/ 
cp steam-linux /home/$AZER/.steam-linux
cp steam-wine /home/$AZER/.steam-wine
cp utils /home/$AZER/
cp wall.jpg /home/$AZER/

############################################
### Login manager                        ###
############################################
# slim customization
sysrc dbus_enable=YES
sysrc hald_enable=YES
sysrc slim_enable=YES
echo "default_user        $AZER" >> /usr/local/etc/slim.conf
echo 'auto_login          yes' >> /usr/local/etc/slim.conf
echo 'focus_password      yes' >> /usr/local/etc/slim.conf

############################################
### Desktop environment                  ###
############################################
# start session
echo 'ck-launch-session dbus-launch --exit-with-session startlxde' >> /home/$AZER/.xinitrc
echo 'startlxde' >> /home/$AZER/.xinitrc
echo 'startlxde' >> /home/steam/.xinitrc
# adding power and reset buttons
cat << EOF >> /usr/local/etc/polkit-1/rules.d/50-default.rules
polkit.addRule(function (action, subject) 
  if ((action.id == "org.freedesktop.consolekit.system.restart" ||
      action.id == "org.freedesktop.consolekit.system.stop")
      && subject.isInGroup("wheel")) {
    return polkit.Result.YES;
  }
});
EOF
# file removal protection
cat << EOF >> /etc/crontab
@reboot root /bin/echo 'startlxde' > /home/$AZER/.xinitrc
EOF
# autostart
cat << EOF >> /usr/local/etc/xdg/lxsession/LXDE/autostart 
@xterm -e ~/autoconfig
@xterm -geometry 40x4-250+0 -e ~/.steam-wine
@xterm -geometry 40x4-0+0 -e ~/.steam-linux
@xterm -geometry 73x31-0-25 -e ./utils
EOF
# set permission
chown -R $AZER:wheel /home/$AZER/
# startx
service dbus start
service hald start
service slim start
su $AZER -c 'startx'


